trigger: none

variables:
  GOBIN: "$(GOPATH)/bin" # Go binaries path
  GOROOT: "/usr/lib/go-1.12" # Go installation path
  GOPATH: "$(system.defaultWorkingDirectory)/go" # Go workspace path
  modulePath: "$(GOPATH)/src/k8s.io/perf-tests" # Path to the module's code

jobs:
  # Scalability Test
  - job: scalability_test
    condition: eq(1,2) # disable job
    displayName: Scalability Test
    pool: Upstream Pool
    timeoutInMinutes: 240
    cancelTimeoutInMinutes: 30
    workspace:
      clean: all
    steps:
      - script: |
          echo "##vso[task.setvariable variable=AGENT_POOL_COUNT]100"
        displayName: "Set agent pool count"
      - template: aks-setup.yaml
      - script: |
          if [ $IS_AKS = true ]; then
            ./run-e2e.sh cluster-loader2 --nodes=100 --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --prometheus-scrape-etcd \
            --testconfig=testing/density/config.yaml \
            --testconfig=testing/load/config.yaml \
            --testoverrides=./testing/density/100_nodes/override.yaml
          else
            export MASTERINTERNALIP=$(kubectl get nodes --kubeconfig $(modulePath)/kubeconfig.json -l "kubernetes.io/role"=="master" -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')

            ./run-e2e.sh cluster-loader2 --nodes=100 --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --master-internal-ip=${MASTERINTERNALIP} \
            --masterip=${AZURE_CLUSTER_NAME}.${AZURE_LOCATION}.cloudapp.azure.com \
            --mastername=k8s-master-$(cat _output/${AZURE_CLUSTER_NAME}/azuredeploy.json | jq .variables.masterVMNamePrefix | cut -c13-20)-0 \
            --prometheus-scrape-etcd \
            --testconfig=testing/density/config.yaml \
            --testconfig=testing/load/config.yaml \
            --testoverrides=./testing/density/100_nodes/override.yaml
          fi
        workingDirectory: "$(modulePath)"
        displayName: "Run scalability test"
      - template: azure-teardown.yaml

  # Node Throughput Test
  - job: node_throughput_test
    condition: eq(1,2) # disable job
    displayName: Node Throughput Test
    pool: Upstream Pool
    timeoutInMinutes: 30
    cancelTimeoutInMinutes: 30
    workspace:
      clean: all
    steps:
      - script: |
          echo "##vso[task.setvariable variable=AGENT_POOL_COUNT]1"
        displayName: "Set agent pool count"
      - template: aks-setup.yaml
      - script: |
          if [ $IS_AKS = true ]; then
            ./run-e2e.sh cluster-loader2 --nodes=1 --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --testconfig=testing/node-throughput/config.yaml
          else
            export MASTERINTERNALIP=$(kubectl get nodes --kubeconfig $(modulePath)/kubeconfig.json -l "kubernetes.io/role"=="master" -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')

            ./run-e2e.sh cluster-loader2 --nodes=1 --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --master-internal-ip=${MASTERINTERNALIP} \
            --masterip=${AZURE_CLUSTER_NAME}.${AZURE_LOCATION}.cloudapp.azure.com \
            --mastername=k8s-master-$(cat _output/${AZURE_CLUSTER_NAME}/azuredeploy.json | jq .variables.masterVMNamePrefix | cut -c13-20)-0 \
            --testconfig=testing/node-throughput/config.yaml
          fi
        workingDirectory: "$(modulePath)"
        displayName: "Run node throughput test"
      - template: azure-teardown.yaml

  # Gatekeeper load test
  - job: gatekeeper_test
    strategy:
      matrix:
        pod-100:
          POD_COUNT: 100
        pod-200:
          POD_COUNT: 200
        pod-300:
          POD_COUNT: 300
        pod-500:
          POD_COUNT: 500
        pod-700:
          POD_COUNT: 700
      maxParallel: 5
    displayName: Gatekeeper load test
    pool: Upstream Pool
    timeoutInMinutes: 240
    cancelTimeoutInMinutes: 30
    # condition: eq(1,2) # disable job
    workspace:
      clean: all
    steps:
      - script: |
          echo "##vso[task.setvariable variable=AGENT_POOL_COUNT]5"
        displayName: "Set agent pool count"
      - template: aks-setup.yaml
      - script: |
          export KUBECONFIG="kubeconfig.json"
          export NAMESPACE="kube-system"
          # substitute gatekeeper variables
          envsubst < clusterloader2/testing/gatekeeper/gk-template.yaml > clusterloader2/testing/gatekeeper/gk.yaml
          # substitute e2e config variables
          envsubst < clusterloader2/testing/gatekeeper/config-template.yaml > clusterloader2/testing/gatekeeper/config.yaml
          ./deploy_gk.sh
        displayName: "Deploy gatekeeper"
        workingDirectory: "$(modulePath)"
      - script: |
          if [ $IS_AKS = true ]; then
            ./run-e2e.sh cluster-loader2 --nodes=${AGENT_POOL_COUNT} --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --testconfig=testing/gatekeeper/config.yaml
          else
            export MASTERINTERNALIP=$(kubectl get nodes --kubeconfig $(modulePath)/kubeconfig.json -l "kubernetes.io/role"=="master" -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')

            ./run-e2e.sh cluster-loader2 --nodes=${AGENT_POOL_COUNT} --provider=local --report-dir=_artifacts \
            --kubeconfig="$(modulePath)/kubeconfig.json" \
            --master-internal-ip=${MASTER_INTERNAL_IP} \
            --masterip=${AZURE_CLUSTER_NAME}.${AZURE_LOCATION}.cloudapp.azure.com \
            --mastername=k8s-master-$(cat _output/${AZURE_CLUSTER_NAME}/azuredeploy.json | jq .variables.masterVMNamePrefix | cut -c13-20)-0 \
            --testconfig=testing/gatekeeper/config.yaml
          fi
        workingDirectory: "$(modulePath)"
        displayName: "Run clusterloader2 test"
      - script: |
          # removing constraint templates
          export KUBECONFIG="kubeconfig.json"
          kubectl delete constrainttemplates.templates.gatekeeper.sh --all
          # waiting for 60 minutes and measuring resource usage
          sleep 3600
          kubectl top pod -n kube-system
        condition: and(succeeded(), eq(variables['REMOVE_CONSTRAINT_TEST'], 'true'))
        workingDirectory: "$(modulePath)"
        displayName: Usage after constraints are removed
      - template: azure-teardown.yaml
