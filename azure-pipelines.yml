trigger: none

pool:
  vmImage: "ubuntu-latest"

steps:
  - script: curl -LO https://github.com/Azure/aks-engine/releases/download/v${AKS_ENGINE_VERSION}/aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64.zip && unzip aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64.zip && chmod +x aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64/aks-engine && sudo mv aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64/aks-engine /usr/local/bin/
    displayName: "Download aks-engine"

  - script: envsubst < definition.json > cluster.json
    displayName: "Build apimodel"
    env:
      CLIENT_SECRET: $(AZURE_CLIENT_SECRET)

  - script: aks-engine deploy --api-model cluster.json --location ${AZURE_LOCATION} --subscription-id ${AZURE_SUBSCRIPTION_ID} --force-overwrite --client-id ${AZURE_CLIENT_ID} --client-secret ${CLIENT_SECRET}
    displayName: "Deploy Azure cluster"
    env:
      CLIENT_SECRET: $(AZURE_CLIENT_SECRET)

  - script: export KUBECONFIG=_output/${AZURE_CLUSTER_NAME}/kubeconfig/kubeconfig.${AZURE_LOCATION}.json
    displayName: "get kubeconfig"

  - script: go get -d ./clusterloader2/...
    displayName: get dependencies

  - script: ./clusterloader2/run-e2e.sh --nodes=1 --provider=local --report-dir=_artifacts --testconfig=testing/node-throughput/config.yaml
    displayName: "run node throughput test"
# TODO: Teardown cluster
