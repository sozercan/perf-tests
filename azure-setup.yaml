steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      cp -rf $(system.defaultWorkingDirectory)/* $(modulePath)
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: "Set up the Go workspace"

  - script: go get -d ./...
    workingDirectory: "$(modulePath)"
    displayName: "Get dependencies"

  - script: |
      # curl -LO https://github.com/Azure/aks-engine/releases/download/v${AKS_ENGINE_VERSION}/aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64.tar.gz
      # tar -zxvf aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64.tar.gz
      # chmod +x aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64/aks-engine
      # sudo mv aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64/aks-engine /usr/local/bin/

      # adds etcd listen metrics endpoint
      # https://github.com/sozercan/aks-engine/tree/etcd-listen-metrics
      curl -LO https://sertacstorage.blob.core.windows.net/aks-engine/aks-engine
      chmod +x aks-engine
      sudo mv aks-engine /usr/local/bin
      curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      chmod +x kubectl
      sudo mv kubectl /usr/local/bin/
    displayName: "Download kubectl and aks-engine"

  - script: echo "##vso[task.setvariable variable=AZURE_CLUSTER_NAME]e2e-$(openssl rand -hex 6)"
    displayName: "Set cluster name"

  - script: |
      echo "##vso[task.setvariable variable=AZURE_ADMIN_USERNAME]$USER"
      echo -e 'y\n' | ssh-keygen -f ~/.ssh/$(AZURE_CLUSTER_NAME) -t rsa -N ''
      echo "##vso[task.setvariable variable=AZURE_SSH_KEY]$(cat ~/.ssh/$(AZURE_CLUSTER_NAME).pub)"
      echo "##vso[task.setvariable variable=LOCAL_SSH_KEY]$HOME/.ssh/$(AZURE_CLUSTER_NAME)"
    displayName: "Generate SSH key"

  - script: |
      envsubst < definition.json > cluster.json
    workingDirectory: "$(modulePath)"
    displayName: "Build apimodel"
    env:
      CLIENT_SECRET: $(AZURE_CLIENT_SECRET)

  - script: |
      aks-engine deploy --api-model cluster.json --location ${AZURE_LOCATION} --subscription-id ${AZURE_SUBSCRIPTION_ID} --force-overwrite --client-id ${AZURE_CLIENT_ID} --client-secret ${CLIENT_SECRET}
      cp _output/${AZURE_CLUSTER_NAME}/kubeconfig/kubeconfig.${AZURE_LOCATION}.json $(modulePath)/kubeconfig.json
    displayName: "Deploy Azure cluster"
    workingDirectory: "$(modulePath)"
    env:
      CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
